name: CI

on:
  push:
    branches:
      - main
      - 'releases/*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      name:
        description: 'Reason'
        required: false
        default: 'Because...'

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      sha7: ${{ steps.version.outputs.sha7 }}
      sha8: ${{ steps.version.outputs.sha8 }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: 'Compute version string'
        id: version
        run: |
          SHA7=$(echo "${{ github.sha }}" | cut -c1-7)
          SHA8=$(echo "${{ github.sha }}" | cut -c1-8)
          echo "::set-output name=sha7::${SHA7}"
          echo "::set-output name=sha8::${SHA8}"
          echo "::set-output name=version::16-ea+${SHA7}"

  build:
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2
      - name: 'Download JDK'
        uses: sormuras/download-jdk@v1
        id: jdk
        with:
          feature: 17
      - name: 'Set up JDK'
        uses: actions/setup-java@v1
        with:
          java-version: ${{ steps.jdk.outputs.version }}
          jdkFile: ${{ steps.jdk.outputs.file }}
      - name: 'Bootstrap Bach'
        run: java --show-version .bach/build/build/Bootstrap.java
      - name: 'Build Bach ${{ needs.setup.outputs.version }}'
        run: |
          java \
            -Dbach.project.version=${{ needs.setup.outputs.version }} \
            -Dbach.project.main.jarslug=early-access \
            -Dbach.project.deploy.maven.version=${{ needs.setup.outputs.version }}+SNAPSHOT \
            --module-path .bach/cache \
            --module com.github.sormuras.bach \
            build
      - name: 'Upload build artifacts'
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-build-${{ needs.setup.outputs.version }}
          path: |
            LICENSE
            .bach/workspace/logbook.md
            .bach/workspace/deploy
            .bach/workspace/documentation
            .bach/workspace/modules

  deploy-to-releases:
    needs: [ setup, build ]
    if: github.event_name == 'push' && github.repository == 'sormuras/bach' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: 'Download build artifact'
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-build-${{ needs.setup.outputs.version }}
      - name: 'Release early-access build to https://github.com/sormuras/bach/releases/tag/early-access'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          automatic_release_tag: 'early-access'
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          title: "Bach ${{ needs.setup.outputs.version }}"
          files: |
            .bach/workspace/modules/*.jar

  deploy-to-api-repository:
    needs: [ setup, build ]
    if: github.event_name == 'push' && github.repository == 'sormuras/bach' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out sormuras/api repository'
        uses: actions/checkout@v2
        with:
          repository: sormuras/api
          token: ${{ secrets.PAT }}
      - name: 'Download build artifact ${{ needs.setup.outputs.version }}'
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-build-${{ needs.setup.outputs.version }}
      - name: 'Sync early-access documentation'
        run: |
          mkdir --parents ${{ github.event.repository.name }}/early-access
          rsync --archive --delete --verbose .bach/workspace/documentation/api/ ${{ github.event.repository.name }}/early-access
      - name: 'Check for modifications'
        id: diff
        run: |
          git status
          echo ::set-output name=modified::$(if [[ -z $(git status --porcelain) ]]; then echo 'false'; else echo 'true'; fi)
      - name: 'Commit and push changes'
        if: steps.diff.outputs.modified == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit --message 'Update API documentation of ${{ github.event.repository.name }} to ${{ needs.setup.outputs.version }}'
          git push
